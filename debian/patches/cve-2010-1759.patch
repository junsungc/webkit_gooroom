description: fix cve-2010-1759
author: Michael Gilbert <michael.s.gilbert@gmail.com>
origin: http://trac.webkit.org/changeset/59109
Index: webkit-1.2.1/WebCore/dom/NamedAttrMap.cpp
===================================================================
--- webkit-1.2.1.orig/WebCore/dom/NamedAttrMap.cpp	2010-05-13 16:31:30.000000000 -0400
+++ webkit-1.2.1/WebCore/dom/NamedAttrMap.cpp	2010-06-28 21:51:06.000000000 -0400
@@ -172,6 +172,11 @@
     return m_attributes[index]->createAttrIfNeeded(m_element);
 }
 
+void NamedNodeMap::copyAttributesToVector(Vector<RefPtr<Attribute> >& copy)
+{
+    copy = m_attributes;
+}
+
 Attribute* NamedNodeMap::getAttributeItemSlowCase(const String& name, bool shouldIgnoreAttributeCase) const
 {
     unsigned len = length();
Index: webkit-1.2.1/WebCore/dom/Element.cpp
===================================================================
--- webkit-1.2.1.orig/WebCore/dom/Element.cpp	2010-05-13 16:31:30.000000000 -0400
+++ webkit-1.2.1/WebCore/dom/Element.cpp	2010-06-28 21:51:06.000000000 -0400
@@ -1430,9 +1430,15 @@
     NamedNodeMap* attrs = attributes(true);
     if (!attrs)
         return;
-    unsigned numAttrs = attrs->length();
-    for (unsigned i = 0; i < numAttrs; i++) {
-        if (Attr* attr = attrs->attributeItem(i)->attr())
+
+    if (attrs->isEmpty())
+        return;
+
+    Vector<RefPtr<Attribute> > attributeVector;
+    attrs->copyAttributesToVector(attributeVector);
+    size_t numAttrs = attributeVector.size();
+    for (size_t i = 0; i < numAttrs; ++i) {
+        if (Attr* attr = attributeVector[i]->attr())
             attr->normalize();
     }
 }
Index: webkit-1.2.1/WebCore/dom/NamedAttrMap.h
===================================================================
--- webkit-1.2.1.orig/WebCore/dom/NamedAttrMap.h	2010-05-13 16:31:30.000000000 -0400
+++ webkit-1.2.1/WebCore/dom/NamedAttrMap.h	2010-06-28 21:51:06.000000000 -0400
@@ -72,6 +72,8 @@
     Attribute* attributeItem(unsigned index) const { return m_attributes[index].get(); }
     Attribute* getAttributeItem(const QualifiedName&) const;
 
+    void copyAttributesToVector(Vector<RefPtr<Attribute> >&);
+
     void shrinkToLength() { m_attributes.shrinkCapacity(length()); }
     void reserveInitialCapacity(unsigned capacity) { m_attributes.reserveInitialCapacity(capacity); }
 
