description: fix cve-2010-1418 part 1
author: Michael Gilbert <michael.s.gilbert@gmail.com>
origin: http://trac.webkit.org/changeset/56651
Index: webkit-1.2.1/WebCore/dom/Attr.idl
===================================================================
--- webkit-1.2.1.orig/WebCore/dom/Attr.idl	2010-05-13 16:31:30.000000000 -0400
+++ webkit-1.2.1/WebCore/dom/Attr.idl	2010-06-28 21:26:29.000000000 -0400
@@ -28,10 +28,17 @@
         // DOM Level 1
 
         readonly attribute [ConvertNullStringTo=Null] DOMString name;
+
         readonly attribute boolean specified;
+
                  attribute [ConvertNullStringTo=Null, ConvertNullToNullString, CustomSetter] DOMString value 
                      setter raises(DOMException);
 
+#if defined(LANGUAGE_JAVASCRIPT) && LANGUAGE_JAVASCRIPT  // Used for JavaScript iFrame src check.
+                 attribute [ConvertNullStringTo=Null, ConvertNullToNullString, Custom] DOMString nodeValue
+                     setter raises(DOMException);
+#endif
+
         // DOM Level 2
 
         readonly attribute Element ownerElement;
@@ -40,6 +47,11 @@
 
         readonly attribute boolean isId;
 
+#if defined(LANGUAGE_JAVASCRIPT) && LANGUAGE_JAVASCRIPT  // Used for JavaScript iFrame src check.
+                 attribute [ConvertNullStringTo=Null, ConvertNullToNullString, Custom] DOMString textContent
+                     setter raises(DOMException);
+#endif
+
         // extensions
         readonly attribute CSSStyleDeclaration style;
     };
Index: webkit-1.2.1/WebCore/bindings/js/JSAttrCustom.cpp
===================================================================
--- webkit-1.2.1.orig/WebCore/bindings/js/JSAttrCustom.cpp	2010-05-13 16:31:30.000000000 -0400
+++ webkit-1.2.1/WebCore/bindings/js/JSAttrCustom.cpp	2010-06-28 21:26:29.000000000 -0400
@@ -59,6 +59,27 @@
     setDOMException(exec, ec);
 }
 
+JSC::JSValue JSAttr::nodeValue(JSC::ExecState* exec) const
+{
+    Attr* imp = this->impl();
+    return jsStringOrNull(exec, imp->value());
+}
+
+void JSAttr::setNodeValue(JSC::ExecState* exec, JSC::JSValue value)
+{
+    setValue(exec, value);
+}
+
+JSC::JSValue JSAttr::textContent(JSC::ExecState* exec) const
+{
+    return nodeValue(exec);
+}
+
+void JSAttr::setTextContent(JSC::ExecState* exec, JSC::JSValue value)
+{
+    setValue(exec, value);
+}
+
 void JSAttr::markChildren(MarkStack& markStack)
 {
     Base::markChildren(markStack);
