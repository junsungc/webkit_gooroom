diff --git a/Source/WebCore/bindings/gobject/WebKitDOMCustom.cpp b/Source/WebCore/bindings/gobject/WebKitDOMCustom.cpp
index 6659785..9eb18c2 100644
--- a/Source/WebCore/bindings/gobject/WebKitDOMCustom.cpp
+++ b/Source/WebCore/bindings/gobject/WebKitDOMCustom.cpp
@@ -20,11 +20,16 @@
 #include "WebKitDOMCustom.h"
 
 #include "WebKitDOMBlob.h"
+#include "WebKitDOMDOMStringList.h"
+#include "WebKitDOMHTMLCollection.h"
 #include "WebKitDOMHTMLFormElement.h"
 #include "WebKitDOMHTMLInputElement.h"
 #include "WebKitDOMHTMLInputElementPrivate.h"
 #include "WebKitDOMHTMLTextAreaElement.h"
 #include "WebKitDOMHTMLTextAreaElementPrivate.h"
+#include "WebKitDOMNodeList.h"
+#include "WebKitDOMObject.h"
+#include "WebKitDOMPrivate.h"
 #include "WebKitDOMWebKitNamedFlow.h"
 
 using namespace WebKit;
@@ -105,3 +110,453 @@ webkit_dom_html_form_element_dispatch_form_input(WebKitDOMHTMLFormElement* self)
 {
     g_warning("The onforminput functionality has been removed from the DOM spec, this function does nothing.");
 }
+
+// WebKitDOMBarInfo
+
+typedef struct _WebKitDOMBarInfo {
+    WebKitDOMObject parent_instance;
+} WebKitDOMBarInfo;
+
+typedef struct _WebKitDOMBarInfoClass {
+    WebKitDOMObjectClass parent_class;
+} WebKitDOMBarInfoClass;
+
+G_DEFINE_TYPE(WebKitDOMBarInfo, webkit_dom_bar_info, WEBKIT_TYPE_DOM_OBJECT)
+
+typedef enum {
+    PROP_0,
+    PROP_VISIBLE,
+} WebKitDOMBarInfoProperties;
+
+static void webkit_dom_bar_info_get_property(GObject* object, guint propertyId, GValue* value, GParamSpec* pspec)
+{
+    switch (propertyId) {
+    case PROP_VISIBLE: {
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("BarInfo")
+        g_value_set_boolean(value, FALSE);
+        break;
+    }
+    default:
+        G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propertyId, pspec);
+        break;
+    }
+}
+
+static void webkit_dom_bar_info_class_init(WebKitDOMBarInfoClass* requestClass)
+{
+    GObjectClass* gobjectClass = G_OBJECT_CLASS(requestClass);
+    gobjectClass->get_property = webkit_dom_bar_info_get_property;
+
+    g_object_class_install_property(gobjectClass,
+        PROP_VISIBLE,
+        g_param_spec_boolean("visible",
+            "bar_info_visible - removed from WebKit, does nothing",
+            "read-only  gboolean BarInfo.visible - removed from WebKit, does nothing",
+            FALSE,
+            WEBKIT_PARAM_READABLE));
+}
+
+static void webkit_dom_bar_info_init(WebKitDOMBarInfo*)
+{
+}
+
+gboolean
+webkit_dom_bar_info_get_visible(void*)
+{
+    g_warning("The BarInfo type has been removed from the DOM spec, this function does nothing.");
+    return FALSE;
+}
+
+// WebKitDOMConsole
+
+void*
+webkit_dom_console_get_memory(WebKitDOMConsole*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+// WebKitDOMCSSStyleDeclaration
+
+WebKitDOMCSSValue*
+webkit_dom_css_style_declaration_get_property_css_value(WebKitDOMCSSStyleDeclaration*, const gchar*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+// WebKitDOMDocument
+
+gboolean
+webkit_dom_document_get_webkit_hidden(WebKitDOMDocument*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return FALSE;
+}
+
+gchar*
+webkit_dom_document_get_webkit_visibility_state(WebKitDOMDocument*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return g_strdup("");
+}
+
+// WebKitDOMHTMLDocument
+
+void
+webkit_dom_html_document_open(WebKitDOMHTMLDocument*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+}
+
+// WebKitDOMHTMLElement
+
+void
+webkit_dom_html_element_set_item_id(WebKitDOMHTMLElement*, const gchar*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+}
+
+gchar*
+webkit_dom_html_element_get_item_id(WebKitDOMHTMLElement*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return g_strdup("");
+}
+
+WebKitDOMDOMSettableTokenList*
+webkit_dom_html_element_get_item_ref(WebKitDOMHTMLElement*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+WebKitDOMDOMSettableTokenList*
+webkit_dom_html_element_get_item_prop(WebKitDOMHTMLElement*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+void
+webkit_dom_html_element_set_item_scope(WebKitDOMHTMLElement*, gboolean)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+}
+
+gboolean
+webkit_dom_html_element_get_item_scope(WebKitDOMHTMLElement*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return FALSE;
+}
+
+void*
+webkit_dom_html_element_get_item_type(WebKitDOMHTMLElement*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+}
+
+// WebKitDOMHTMLPropertiesCollection
+
+typedef struct _WebKitDOMHTMLPropertiesCollection {
+    WebKitDOMHTMLCollection parent_instance;
+} WebKitDOMHTMLPropertiesCollection;
+
+typedef struct _WebKitDOMHTMLPropertiesCollectionClass {
+    WebKitDOMHTMLCollectionClass parent_class;
+} WebKitDOMHTMLPropertiesCollectionClass;
+
+G_DEFINE_TYPE(WebKitDOMHTMLPropertiesCollection, webkit_dom_html_properties_collection, WEBKIT_TYPE_DOM_HTML_COLLECTION)
+
+enum {
+    HTML_PROPERTIES_COLLECTION_PROP_0,
+    HTML_PROPERTIES_COLLECTION_PROP_LENGTH,
+    HTML_PROPERTIES_COLLECTION_PROP_NAMES,
+};
+
+static void webkit_dom_html_properties_collection_get_property(GObject* object, guint propertyId, GValue* value, GParamSpec* pspec)
+{
+    switch (propertyId) {
+    case HTML_PROPERTIES_COLLECTION_PROP_LENGTH: {
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("Microdata")
+        break;
+    }
+    case HTML_PROPERTIES_COLLECTION_PROP_NAMES: {
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("Microdata")
+        break;
+    }
+    default:
+        G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propertyId, pspec);
+        break;
+    }
+}
+
+static void webkit_dom_html_properties_collection_class_init(WebKitDOMHTMLPropertiesCollectionClass* requestClass)
+{
+    GObjectClass* gobjectClass = G_OBJECT_CLASS(requestClass);
+    gobjectClass->get_property = webkit_dom_html_properties_collection_get_property;
+
+    g_object_class_install_property(gobjectClass,
+        HTML_PROPERTIES_COLLECTION_PROP_LENGTH,
+        g_param_spec_ulong("length",
+            "html_properties_collection_length - removed from WebKit, does nothing",
+            "read-only  gulong HTMLPropertiesCollection.length - removed from WebKit, does nothing",
+            0,
+            G_MAXULONG,
+            0,
+            WEBKIT_PARAM_READABLE));
+
+    g_object_class_install_property(gobjectClass,
+        HTML_PROPERTIES_COLLECTION_PROP_NAMES,
+        g_param_spec_object("names",
+            "html_properties_collection_names - removed from WebKit, does nothing",
+            "read-only  WebKitDOMDOMStringList* HTMLPropertiesCollection.names - removed from WebKit, does nothing",
+            WEBKIT_TYPE_DOM_DOM_STRING_LIST,
+            WEBKIT_PARAM_READABLE));
+}
+
+static void webkit_dom_html_properties_collection_init(WebKitDOMHTMLPropertiesCollection* request)
+{
+}
+
+WebKitDOMNode*
+webkit_dom_html_properties_collection_item(void*, gulong)
+{
+    g_warning("%s: the PropertiesCollection object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+void*
+webkit_dom_html_properties_collection_named_item(void*, const gchar*)
+{
+    g_warning("%s: the PropertiesCollection object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+gulong
+webkit_dom_html_properties_collection_get_length(void*)
+{
+    g_warning("%s: the PropertiesCollection object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+WebKitDOMDOMStringList*
+webkit_dom_html_properties_collection_get_names(void*)
+{
+    g_warning("%s: the PropertiesCollection object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+// WebKitDOMNode
+
+WebKitDOMNamedNodeMap*
+webkit_dom_node_get_attributes(WebKitDOMNode*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+gboolean
+webkit_dom_node_has_attributes(WebKitDOMNode*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return FALSE;
+}
+
+// WebKitDOMMemoryInfo
+
+typedef struct _WebKitDOMMemoryInfo {
+    WebKitDOMObject parent_instance;
+} WebKitDOMMemoryInfo;
+
+typedef struct _WebKitDOMMemoryInfoClass {
+    WebKitDOMObjectClass parent_class;
+} WebKitDOMMemoryInfoClass;
+
+
+G_DEFINE_TYPE(WebKitDOMMemoryInfo, webkit_dom_memory_info, WEBKIT_TYPE_DOM_OBJECT)
+
+enum {
+    DOM_MEMORY_PROP_0,
+    DOM_MEMORY_PROP_TOTAL_JS_HEAP_SIZE,
+    DOM_MEMORY_PROP_USED_JS_HEAP_SIZE,
+    DOM_MEMORY_PROP_JS_HEAP_SIZE_LIMIT,
+};
+
+static void webkit_dom_memory_info_get_property(GObject* object, guint propertyId, GValue* value, GParamSpec* pspec)
+{
+    switch (propertyId) {
+    case DOM_MEMORY_PROP_TOTAL_JS_HEAP_SIZE: {
+        g_value_set_ulong(value, 0);
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("MemoryInfo")
+        break;
+    }
+    case DOM_MEMORY_PROP_USED_JS_HEAP_SIZE: {
+        g_value_set_ulong(value, 0);
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("MemoryInfo")
+        break;
+    }
+    case DOM_MEMORY_PROP_JS_HEAP_SIZE_LIMIT: {
+        g_value_set_ulong(value, 0);
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("MemoryInfo")
+        break;
+    }
+    default:
+        G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propertyId, pspec);
+        break;
+    }
+}
+
+static void webkit_dom_memory_info_class_init(WebKitDOMMemoryInfoClass* requestClass)
+{
+    GObjectClass* gobjectClass = G_OBJECT_CLASS(requestClass);
+    gobjectClass->get_property = webkit_dom_memory_info_get_property;
+
+    g_object_class_install_property(gobjectClass,
+        DOM_MEMORY_PROP_TOTAL_JS_HEAP_SIZE,
+        g_param_spec_ulong("total-js-heap-size",
+            "memory_info_total-js-heap-size - removed from WebKit, does nothing",
+            "read-only  gulong MemoryInfo.total-js-heap-size - removed from WebKit, does nothing",
+            0,
+            G_MAXULONG,
+            0,
+            WEBKIT_PARAM_READABLE));
+    g_object_class_install_property(gobjectClass,
+        DOM_MEMORY_PROP_USED_JS_HEAP_SIZE,
+        g_param_spec_ulong("used-js-heap-size",
+            "memory_info_used-js-heap-size - removed from WebKit, does nothing",
+            "read-only  gulong MemoryInfo.used-js-heap-size - removed from WebKit, does nothing",
+            0,
+            G_MAXULONG,
+            0,
+            WEBKIT_PARAM_READABLE));
+    g_object_class_install_property(gobjectClass,
+        DOM_MEMORY_PROP_JS_HEAP_SIZE_LIMIT,
+        g_param_spec_ulong("js-heap-size-limit",
+            "memory_info_js-heap-size-limit - removed from WebKit, does nothing",
+            "read-only  gulong MemoryInfo.js-heap-size-limit - removed from WebKit, does nothing",
+            0,
+            G_MAXULONG,
+            0,
+            WEBKIT_PARAM_READABLE));
+}
+
+static void webkit_dom_memory_info_init(WebKitDOMMemoryInfo*)
+{
+}
+
+gulong
+webkit_dom_memory_info_get_total_js_heap_size(void*)
+{
+    g_warning("%s: the MemoryInfo object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+gulong
+webkit_dom_memory_info_get_used_js_heap_size(void*)
+{
+    g_warning("%s: the MemoryInfo object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+gulong
+webkit_dom_memory_info_get_js_heap_size_limit(void*)
+{
+    g_warning("%s: the MemoryInfo object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+// WebKitDOMMicroDataItemValue
+
+typedef struct _WebKitDOMMicroDataItemValue {
+    WebKitDOMObject parent_instance;
+} WebKitDOMMicroDataItemValue;
+
+typedef struct _WebKitDOMMicroDataItemValueClass {
+    WebKitDOMObjectClass parent_class;
+} WebKitDOMMicroDataItemValueClass;
+
+G_DEFINE_TYPE(WebKitDOMMicroDataItemValue, webkit_dom_micro_data_item_value, WEBKIT_TYPE_DOM_OBJECT)
+
+static void webkit_dom_micro_data_item_value_class_init(WebKitDOMMicroDataItemValueClass*)
+{
+}
+
+static void webkit_dom_micro_data_item_value_init(WebKitDOMMicroDataItemValue*)
+{
+}
+
+// WebKitDOMPerformance
+
+void*
+webkit_dom_performance_get_memory(WebKitDOMPerformance*)
+{
+    g_warning("%s: this functionality has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+// WebKitDOMPropertyNodeList
+
+typedef struct _WebKitDOMPropertyNodeList {
+    WebKitDOMNodeList parent_instance;
+} WebKitDOMPropertyNodeList;
+
+typedef struct _WebKitDOMPropertyNodeListClass {
+    WebKitDOMNodeListClass parent_class;
+} WebKitDOMPropertyNodeListClass;
+
+G_DEFINE_TYPE(WebKitDOMPropertyNodeList, webkit_dom_property_node_list, WEBKIT_TYPE_DOM_NODE_LIST)
+
+enum {
+    PROPERTY_NODE_LIST_PROP_0,
+    PROPERTY_NODE_LIST_PROP_LENGTH,
+};
+
+static void webkit_dom_property_node_list_get_property(GObject* object, guint propertyId, GValue* value, GParamSpec* pspec)
+{
+    switch (propertyId) {
+    case PROPERTY_NODE_LIST_PROP_LENGTH: {
+        g_value_set_ulong(value, 0);
+        WEBKIT_WARN_FEATURE_NOT_PRESENT("Microdata")
+        break;
+    }
+    default:
+        G_OBJECT_WARN_INVALID_PROPERTY_ID(object, propertyId, pspec);
+        break;
+    }
+}
+
+static void webkit_dom_property_node_list_class_init(WebKitDOMPropertyNodeListClass* requestClass)
+{
+    GObjectClass* gobjectClass = G_OBJECT_CLASS(requestClass);
+    gobjectClass->get_property = webkit_dom_property_node_list_get_property;
+
+    g_object_class_install_property(gobjectClass,
+        PROPERTY_NODE_LIST_PROP_LENGTH,
+        g_param_spec_ulong("length",
+            "property_node_list_length - removed from WebKit, does nothing",
+            "read-only  gulong PropertyNodeList.length - removed from WebKit, does nothing",
+            0,
+            G_MAXULONG,
+            0,
+            WEBKIT_PARAM_READABLE));
+}
+
+static void webkit_dom_property_node_list_init(WebKitDOMPropertyNodeList*)
+{
+}
+
+WebKitDOMNode*
+webkit_dom_property_node_list_item(void*, gulong)
+{
+    g_warning("%s: the PropertyNodeList object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
+
+gulong
+webkit_dom_property_node_list_get_length(void*)
+{
+    g_warning("%s: the PropertyNodeList object has been removed from WebKit, this function does nothing.", __func__);
+    return 0;
+}
diff --git a/Source/WebCore/bindings/gobject/WebKitDOMCustom.h b/Source/WebCore/bindings/gobject/WebKitDOMCustom.h
index aa2219e..b41f762 100644
--- a/Source/WebCore/bindings/gobject/WebKitDOMCustom.h
+++ b/Source/WebCore/bindings/gobject/WebKitDOMCustom.h
@@ -20,6 +20,7 @@
 #define WebKitDOMCustom_h
 
 #include <glib.h>
+#include <glib-object.h>
 #include <webkitdom/webkitdomdefines.h>
 
 G_BEGIN_DECLS
@@ -126,6 +127,325 @@ WEBKIT_API WebKitDOMNodeList* webkit_dom_webkit_named_flow_get_content_nodes(Web
  */
 WEBKIT_API WebKitDOMNodeList* webkit_dom_webkit_named_flow_get_regions_by_content_node(WebKitDOMWebKitNamedFlow* flow, WebKitDOMNode* content_node);
 
+WEBKIT_API GType
+webkit_dom_bar_info_get_type(void);
+
+/**
+ * webkit_dom_bar_info_get_visible:
+ * @self: A #WebKitDOMBarInfo
+ *
+ * The BarInfo type has been removed from the DOM spec, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gboolean
+webkit_dom_bar_info_get_visible(void* self);
+
+/**
+ * webkit_dom_console_get_memory:
+ * @self: A #WebKitDOMConsole
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API void*
+webkit_dom_console_get_memory(WebKitDOMConsole* self);
+
+/**
+ * webkit_dom_css_style_declaration_get_property_css_value:
+ * @self: A #WebKitDOMCSSStyleDeclaration
+ * @propertyName: A #gchar
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMCSSValue*
+webkit_dom_css_style_declaration_get_property_css_value(WebKitDOMCSSStyleDeclaration* self, const gchar* propertyName);
+
+/**
+ * webkit_dom_document_get_webkit_hidden:
+ * @self: A #WebKitDOMDocument
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gboolean
+webkit_dom_document_get_webkit_hidden(WebKitDOMDocument* self);
+
+/**
+ * webkit_dom_document_get_webkit_visibility_state:
+ * @self: A #WebKitDOMDocument
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gchar*
+webkit_dom_document_get_webkit_visibility_state(WebKitDOMDocument* self);
+
+/**
+ * webkit_dom_html_document_open:
+ * @self: A #WebKitDOMHTMLDocument
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API void
+webkit_dom_html_document_open(WebKitDOMHTMLDocument* self);
+
+/**
+ * webkit_dom_html_element_set_item_id:
+ * @self: A #WebKitDOMHTMLElement
+ * @value: A #gchar
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API void
+webkit_dom_html_element_set_item_id(WebKitDOMHTMLElement* self, const gchar* value);
+
+/**
+ * webkit_dom_html_element_get_item_id:
+ * @self: A #WebKitDOMHTMLElement
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gchar*
+webkit_dom_html_element_get_item_id(WebKitDOMHTMLElement* self);
+
+/**
+ * webkit_dom_html_element_get_item_ref:
+ * @self: A #WebKitDOMHTMLElement
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMDOMSettableTokenList*
+webkit_dom_html_element_get_item_ref(WebKitDOMHTMLElement* self);
+
+/**
+ * webkit_dom_html_element_get_item_prop:
+ * @self: A #WebKitDOMHTMLElement
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMDOMSettableTokenList*
+webkit_dom_html_element_get_item_prop(WebKitDOMHTMLElement* self);
+
+/**
+ * webkit_dom_html_element_set_item_scope:
+ * @self: A #WebKitDOMHTMLElement
+ * @value: A #gboolean
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API void
+webkit_dom_html_element_set_item_scope(WebKitDOMHTMLElement* self, gboolean value);
+
+/**
+ * webkit_dom_html_element_get_item_scope:
+ * @self: A #WebKitDOMHTMLElement
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gboolean
+webkit_dom_html_element_get_item_scope(WebKitDOMHTMLElement* self);
+
+/**
+ * webkit_dom_html_element_get_item_type:
+ * @self: A #WebKitDOMHTMLElement
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API void*
+webkit_dom_html_element_get_item_type(WebKitDOMHTMLElement*);
+
+WEBKIT_API GType
+webkit_dom_html_properties_collection_get_type(void);
+
+/**
+ * webkit_dom_html_properties_collection_item:
+ * @self: A #WebKitDOMHTMLPropertiesCollection
+ * @index: A #gulong
+ *
+ * The PropertiesCollection object has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMNode*
+webkit_dom_html_properties_collection_item(void* self, gulong index);
+
+/**
+ * webkit_dom_html_properties_collection_named_item:
+ * @self: A #WebKitDOMHTMLPropertiesCollection
+ * @name: A #gchar
+ *
+ * The PropertiesCollection object has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API void*
+webkit_dom_html_properties_collection_named_item(void* self, const gchar* name);
+
+/**
+ * webkit_dom_html_properties_collection_get_length:
+ * @self: A #WebKitDOMHTMLPropertiesCollection
+ *
+ * The PropertiesCollection object has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gulong
+webkit_dom_html_properties_collection_get_length(void* self);
+
+/**
+ * webkit_dom_html_properties_collection_get_names:
+ * @self: A #WebKitDOMHTMLPropertiesCollection
+ *
+ * The PropertiesCollection object has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMDOMStringList*
+webkit_dom_html_properties_collection_get_names(void* self);
+
+/**
+ * webkit_dom_node_get_attributes:
+ * @self: A #WebKitDOMNode
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMNamedNodeMap*
+webkit_dom_node_get_attributes(WebKitDOMNode* self);
+
+/**
+ * webkit_dom_node_has_attributes:
+ * @self: A #WebKitDOMNode
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gboolean
+webkit_dom_node_has_attributes(WebKitDOMNode* self);
+
+WEBKIT_API GType
+webkit_dom_memory_info_get_type(void);
+
+/**
+ * webkit_dom_memory_info_get_total_js_heap_size:
+ * @self: A #WebKitDOMMemoryInfo
+ *
+ * The MemoryInfo object has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gulong
+webkit_dom_memory_info_get_total_js_heap_size(void* self);
+
+/**
+ * webkit_dom_memory_info_get_used_js_heap_size:
+ * @self: A #WebKitDOMMemoryInfo
+ *
+ * The MemoryInfo object has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gulong
+webkit_dom_memory_info_get_used_js_heap_size(void* self);
+
+/**
+ * webkit_dom_memory_info_get_js_heap_size_limit:
+ * @self: A #WebKitDOMMemoryInfo
+ *
+ * The MemoryInfo object has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gulong
+webkit_dom_memory_info_get_js_heap_size_limit(void* self);
+
+WEBKIT_API GType
+webkit_dom_micro_data_item_value_get_type(void);
+
+/**
+ * webkit_dom_performance_get_memory:
+ * @self: A #WebKitDOMPerformance
+ *
+ * This functionality has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API void*
+webkit_dom_performance_get_memory(WebKitDOMPerformance* self);
+
+WEBKIT_API GType
+webkit_dom_property_node_list_get_type(void);
+
+/**
+ * webkit_dom_property_node_list_item:
+ * @self: A #WebKitDOMPropertyNodeList
+ * @index: A #gulong
+ *
+ * The PropertyNodeList object has been removed from WebKit, this function does nothing.
+ *
+ * Returns: (transfer none):
+ *
+**/
+WEBKIT_API WebKitDOMNode*
+webkit_dom_property_node_list_item(void* self, gulong index);
+
+/**
+ * webkit_dom_property_node_list_get_length:
+ * @self: A #WebKitDOMPropertyNodeList
+ *
+ * The PropertyNodeList object has been removed from WebKit, this function does nothing.
+ *
+ * Returns:
+ *
+**/
+WEBKIT_API gulong
+webkit_dom_property_node_list_get_length(void* self);
+
 G_END_DECLS
 
 #endif
