Description: Make favicon database thread-safe (closes: #697172).
Author: Stephan Schreiber <info@fs-driver.org>
Index: webkit-1.8.1/Source/WebCore/loader/icon/IconDatabaseBase.h
===================================================================
--- webkit-1.8.1.orig/Source/WebCore/loader/icon/IconDatabaseBase.h	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebCore/loader/icon/IconDatabaseBase.h	2013-02-16 16:58:46.177320584 -0500
@@ -26,6 +26,7 @@
 #ifndef IconDatabaseBase_h
 #define IconDatabaseBase_h
 
+#include "ImageSource.h"
 #include "SharedBuffer.h"
 
 #include <wtf/Forward.h>
@@ -178,7 +179,8 @@
     virtual bool synchronousIconDataKnownForIconURL(const String&) { return false; }
     virtual IconLoadDecision synchronousLoadDecisionForIconURL(const String&, DocumentLoader*) { return IconLoadNo; }
     virtual Image* synchronousIconForPageURL(const String&, const IntSize&) { return 0; }
-    
+    virtual NativeImagePtr synchronousNativeIconForPageURL(const String&, const IntSize&) { return 0; }
+
     // Asynchronous calls we should use to replace the above when supported.
     virtual bool supportsAsynchronousMode() { return false; }
     virtual void loadDecisionForIconURL(const String&, PassRefPtr<IconLoadDecisionCallback>) { }
Index: webkit-1.8.1/Source/WebCore/loader/icon/IconDatabase.cpp
===================================================================
--- webkit-1.8.1.orig/Source/WebCore/loader/icon/IconDatabase.cpp	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebCore/loader/icon/IconDatabase.cpp	2013-02-16 16:58:17.557320831 -0500
@@ -34,6 +34,7 @@
 #include "FileSystem.h"
 #include "IconDatabaseClient.h"
 #include "IconRecord.h"
+#include "Image.h"
 #include "IntSize.h"
 #include "Logging.h"
 #include "SQLiteStatement.h"
@@ -290,6 +291,16 @@
     return iconRecord->image(size);
 }
 
+NativeImagePtr IconDatabase::synchronousNativeIconForPageURL(const String& pageURLOriginal, const IntSize& size)
+{
+    Image* icon = synchronousIconForPageURL(pageURLOriginal, size);
+    if (!icon)
+        return 0;
+
+    MutexLocker locker(m_urlAndIconLock);
+    return icon->nativeImageForCurrentFrame();
+}
+
 void IconDatabase::readIconForPageURLFromDisk(const String& pageURL)
 {
     // The effect of asking for an Icon for a pageURL automatically queues it to be read from disk
Index: webkit-1.8.1/Source/WebCore/loader/icon/IconDatabase.h
===================================================================
--- webkit-1.8.1.orig/Source/WebCore/loader/icon/IconDatabase.h	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebCore/loader/icon/IconDatabase.h	2013-02-16 16:58:17.557320831 -0500
@@ -93,6 +93,7 @@
     virtual void setIconURLForPageURL(const String& iconURL, const String& pageURL);
 
     virtual Image* synchronousIconForPageURL(const String&, const IntSize&);
+    virtual NativeImagePtr synchronousNativeIconForPageURL(const String& pageURLOriginal, const IntSize&);
     virtual String synchronousIconURLForPageURL(const String&);
     virtual bool synchronousIconDataKnownForIconURL(const String&);
     virtual IconLoadDecision synchronousLoadDecisionForIconURL(const String&, DocumentLoader*);    
Index: webkit-1.8.1/Source/WebKit/gtk/webkit/webkitfavicondatabase.cpp
===================================================================
--- webkit-1.8.1.orig/Source/WebKit/gtk/webkit/webkitfavicondatabase.cpp	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebKit/gtk/webkit/webkitfavicondatabase.cpp	2013-02-16 16:58:17.557320831 -0500
@@ -24,6 +24,7 @@
 #include "DatabaseDetails.h"
 #include "DatabaseTracker.h"
 #include "FileSystem.h"
+#include "GdkCairoUtilities.h"
 #include "GRefPtr.h"
 #include "IconDatabase.h"
 #include "IconDatabaseClient.h"
@@ -394,16 +395,18 @@
 
     // The exact size we pass is irrelevant to the iconDatabase code.
     // We must pass something greater than 0x0 to get a pixbuf.
-    Image* icon = iconDatabase().synchronousIconForPageURL(pageURL, !iconSize.isZero() ? iconSize : IntSize(1, 1));
+    NativeImagePtr icon = iconDatabase().synchronousNativeIconForPageURL(pageURL, !iconSize.isZero() ? iconSize : IntSize(1, 1));
     if (!icon)
         return 0;
 
-    GRefPtr<GdkPixbuf> pixbuf = adoptGRef(icon->getGdkPixbuf());
+    GRefPtr<GdkPixbuf> pixbuf = adoptGRef(cairoImageSurfaceToGdkPixbuf(icon));
     if (!pixbuf)
         return 0;
 
     // A size of (0, 0) means the maximum available size.
-    if (!iconSize.isZero() && (icon->width() != iconSize.width() || icon->height() != iconSize.height()))
+    int pixbufWidth = gdk_pixbuf_get_width(pixbuf.get());
+    int pixbufHeight = gdk_pixbuf_get_height(pixbuf.get());
+    if (!iconSize.isZero() && (pixbufWidth != iconSize.width() || pixbufHeight != iconSize.height()))
         pixbuf = gdk_pixbuf_scale_simple(pixbuf.get(), iconSize.width(), iconSize.height(), GDK_INTERP_BILINEAR);
     return pixbuf.leakRef();
 }
Index: webkit-1.8.1/Source/WebKit2/UIProcess/WebIconDatabase.cpp
===================================================================
--- webkit-1.8.1.orig/Source/WebKit2/UIProcess/WebIconDatabase.cpp	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebKit2/UIProcess/WebIconDatabase.cpp	2013-02-16 16:58:17.557320831 -0500
@@ -190,6 +190,14 @@
     return m_iconDatabaseImpl->synchronousIconForPageURL(pageURL, iconSize);
 }
 
+WebCore::NativeImagePtr WebIconDatabase::nativeImageForPageURL(const String& pageURL, const WebCore::IntSize& iconSize)
+{
+    if (!m_webContext || !m_iconDatabaseImpl || !m_iconDatabaseImpl->isOpen() || pageURL.isEmpty())
+        return 0;
+
+    return m_iconDatabaseImpl->synchronousNativeIconForPageURL(pageURL, iconSize);
+}
+
 void WebIconDatabase::removeAllIcons()
 {
     m_iconDatabaseImpl->removeAllIcons();   
Index: webkit-1.8.1/Source/WebKit2/UIProcess/WebIconDatabase.h
===================================================================
--- webkit-1.8.1.orig/Source/WebKit2/UIProcess/WebIconDatabase.h	2013-02-16 16:58:17.561320831 -0500
+++ webkit-1.8.1/Source/WebKit2/UIProcess/WebIconDatabase.h	2013-02-16 16:58:17.557320831 -0500
@@ -31,6 +31,7 @@
 #include "Connection.h"
 #include "WebIconDatabaseClient.h"
 #include <WebCore/IconDatabaseClient.h>
+#include <WebCore/ImageSource.h>
 #include <WebCore/IntSize.h>
 #include <wtf/Forward.h>
 #include <wtf/PassRefPtr.h>
@@ -78,6 +79,7 @@
     void getLoadDecisionForIconURL(const String&, uint64_t callbackID);
 
     WebCore::Image* imageForPageURL(const String&, const WebCore::IntSize& iconSize = WebCore::IntSize(32, 32));
+    WebCore::NativeImagePtr nativeImageForPageURL(const String&, const WebCore::IntSize& iconSize = WebCore::IntSize(32, 32));
     
     void removeAllIcons();
     void checkIntegrityBeforeOpening();
