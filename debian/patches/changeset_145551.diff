--- trunk/Source/JavaScriptCore/llint/LowLevelInterpreter.cpp	(revision 145550)
+++ trunk/Source/JavaScriptCore/llint/LowLevelInterpreter.cpp	(revision 145551)
@@ -118,4 +118,15 @@
     return u.dval;
 }
+
+static void Double2Ints(double val, uint32_t& lo, uint32_t& hi)
+{
+    union {
+        double dval;
+        uint64_t ival64;
+    } u;
+    u.dval = val;
+    hi = static_cast<uint32_t>(u.ival64 >> 32);
+    lo = static_cast<uint32_t>(u.ival64);
+}
 #endif // USE(JSVALUE32_64)
 
--- trunk/Source/JavaScriptCore/offlineasm/cloop.rb	(revision 145550)
+++ trunk/Source/JavaScriptCore/offlineasm/cloop.rb	(revision 145551)
@@ -1026,5 +1026,5 @@
         # Encode a 64-bit double into 2 32-bit ints (low and high).
         when "fd2ii"
-            $asm.putc "Double2Ints(#{operands[0].clValue(:double)}, #{operands[1].clValue}, #{operands[2].clValue});"
+            $asm.putc "Double2Ints(#{operands[0].clValue(:double)}, #{operands[1].clValue(:uint32)}, #{operands[2].clValue(:uint32)});"
 
         # 64-bit instruction: fq2d int64Op dblOp (based on X64)
